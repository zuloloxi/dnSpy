<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:ctrls="clr-namespace:ICSharpCode.ILSpy.Controls"
	xmlns:ctrls2="clr-namespace:dnSpy.Controls"
>
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="pack://application:,,,/dnSpy;component/Controls/SearchBoxStyle.xaml" />
	</ResourceDictionary.MergedDictionaries>
	
	<!-- SortableGridViewColumn.
		Displays an up arrow or down arrow in the column header when the grid is sorted using that column.
	-->
	<ctrls:ColumnSortDirectionToVisibilityConverter x:Key="ColumnSortDirectionToVisibilityConverter"/>
	
	<DataTemplate x:Key="{ComponentResourceKey {x:Type ctrls:SortableGridViewColumn}, ColumnHeaderTemplate}">
		<StackPanel Orientation="Horizontal">
			<TextBlock HorizontalAlignment="Center" Text="{Binding}"/>
			<Path x:Name="upArrow"
			      Visibility="{Binding Path=Column.SortDirection, ConverterParameter={x:Static ctrls:ColumnSortDirection.Ascending}, RelativeSource={RelativeSource AncestorType={x:Type GridViewColumnHeader}}, Converter={StaticResource ColumnSortDirectionToVisibilityConverter}}"
			      StrokeThickness = "1"
			      Fill            = "{DynamicResource HeaderGlyph}"
			      Data            = "M 5,10 L 15,10 L 10,5 L 5,10"/>
			<Path x:Name="downArrow"
			      Visibility="{Binding Path=Column.SortDirection, ConverterParameter={x:Static ctrls:ColumnSortDirection.Descending}, RelativeSource={RelativeSource AncestorType={x:Type GridViewColumnHeader}}, Converter={StaticResource ColumnSortDirectionToVisibilityConverter}}"
			      StrokeThickness = "1"
			      Fill            = "{DynamicResource HeaderGlyph}"
			      Data            = "M 5,5 L 10,10 L 15,5 L 5,5"/>
		</StackPanel>
		<DataTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="true">
				<Setter TargetName="upArrow"
						Property="Fill"
						Value="{DynamicResource HeaderMouseOverGlyph}"/>
				<Setter TargetName="downArrow"
						Property="Fill"
						Value="{DynamicResource HeaderMouseOverGlyph}"/>
			</Trigger>
		</DataTemplate.Triggers>
	</DataTemplate>

	<!-- DockedPane -->
	<Style TargetType="{x:Type ctrls:DockedPane}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ctrls:DockedPane}">
					<Border
						Background="{DynamicResource EnvironmentToolWindow}"
						BorderThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness}"
						BorderBrush="{DynamicResource EnvironmentToolWindowBorder}">
							<DockPanel>
							<Border Name="Bd"
									BorderThickness="0,0,0,0"
									MinHeight="19"
									Padding="1,3,1,3"
									Focusable="False"
									BorderBrush="{DynamicResource EnvironmentTitleBarInactiveBorder}"
									Background="{DynamicResource EnvironmentTitleBarInactiveGradient}"
									TextBlock.Foreground="{DynamicResource EnvironmentTitleBarInactiveText}"
									DockPanel.Dock="Top">
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>
									<TextBlock Text="{TemplateBinding Title}" Margin="3,0" VerticalAlignment="Center"/>
									<Rectangle Grid.Column="1" Name="Rect" Height="5" VerticalAlignment="Center" Margin="8 0 4 0" Fill="{DynamicResource EnvironmentTitleBarDragHandle}" />
									<ctrls2:TabButton x:Name="PART_Close"
													 Grid.Column="2"
													 Margin="3 -1 3 0"
													 GlyphForeground="{DynamicResource EnvironmentToolWindowButtonInactiveGlyph}"
													 HoverBackground="{DynamicResource EnvironmentToolWindowButtonHoverInactive}"
													 HoverBorderBrush="{DynamicResource EnvironmentToolWindowButtonHoverInactiveBorder}"
													 HoverForeground="{DynamicResource EnvironmentToolWindowButtonHoverInactiveGlyph}"
													 HoverBorderThickness="1"
													 PressedBackground="{DynamicResource EnvironmentToolWindowButtonDown}"
													 PressedBorderBrush="{DynamicResource EnvironmentToolWindowButtonDownBorder}"
													 PressedForeground="{DynamicResource EnvironmentToolWindowButtonDownActiveGlyph}"
													 PressedBorderThickness="1"
													 ToolTip="Close">
										<Path x:Name="CloseButtonCross"
											  Width="10" Height="8"
											  Stretch="Uniform"
											  Data="F1M0,0L2,0 5,3 8,0 10,0 6,4 10,8 8,8 5,5 2,8 0,8 4,4 0,0z"
											  Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}" />
									</ctrls2:TabButton>
								</Grid>
							</Border>
							<ContentPresenter Content="{TemplateBinding Content}" />
						</DockPanel>
					</Border>
					<ControlTemplate.Triggers>
						<DataTrigger Value="True" Binding="{Binding IsActive, RelativeSource={RelativeSource Self}}">
							<Setter TargetName="Bd" Value="{DynamicResource EnvironmentTitleBarActiveGradient}" Property="Background" />
							<Setter TargetName="Bd" Value="{DynamicResource EnvironmentTitleBarActiveBorder}" Property="BorderBrush" />
							<Setter TargetName="Bd" Value="{DynamicResource EnvironmentTitleBarActiveText}" Property="TextElement.Foreground" />
							<Setter TargetName="PART_Close" Value="{DynamicResource EnvironmentToolWindowButtonHoverActive}" Property="HoverBackground" />
							<Setter TargetName="PART_Close" Value="{DynamicResource EnvironmentToolWindowButtonHoverActiveBorder}" Property="HoverBorderBrush" />
							<Setter TargetName="PART_Close" Value="{DynamicResource EnvironmentToolWindowButtonHoverActiveGlyph}" Property="HoverForeground" />
							<Setter TargetName="PART_Close" Value="{DynamicResource EnvironmentToolWindowButtonActiveGlyph}" Property="GlyphForeground" />
							<Setter TargetName="Rect" Value="{DynamicResource EnvironmentTitleBarDragHandleActive}" Property="Fill" />
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>