<!--
    Copyright (C) 2014-2015 de4dot@gmail.com

    This file is part of dnSpy

    dnSpy is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    dnSpy is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with dnSpy.  If not, see <http://www.gnu.org/licenses/>.
-->
<UserControl x:Class="dnSpy.AsmEditor.MethodBody.MethodBodyControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:mbody="clr-namespace:dnSpy.AsmEditor.MethodBody"
             xmlns:vc="clr-namespace:dnSpy.AsmEditor.Converters"
             xmlns:mvvmvc="clr-namespace:dnSpy.MVVM.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="100" d:DesignWidth="1000">
	<UserControl.Resources>
		<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
		<vc:CilObjectConverter x:Key="CilObjectConverter" />
		<vc:InstructionOperandTextBoxStyleConverter x:Key="InstructionOperandTextBoxStyleConverter" />
		<DataTemplate x:Key="OperandDataTemplate">
			<ContentPresenter Content="{Binding Converter={StaticResource CilObjectConverter}}" />
		</DataTemplate>
		<DataTemplate x:Key="EHDataTemplate">
			<ContentPresenter Content="{Binding Converter={StaticResource CilObjectConverter}}" />
		</DataTemplate>
		<DataTemplate x:Key="SelectionBoxEHDataTemplate">
			<ContentPresenter Content="{Binding Converter={StaticResource CilObjectConverter}, ConverterParameter=s}" />
		</DataTemplate>
		<DataTemplate x:Key="HandlerTypeDataTemplate">
			<TextBlock Text="{Binding Name}" TextTrimming="CharacterEllipsis" />
		</DataTemplate>
	</UserControl.Resources>
	<TabControl>
		<TabItem Header="Instructions">
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="*" />
				</Grid.RowDefinitions>
				<Grid Grid.Row="0">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="*" />
					</Grid.ColumnDefinitions>
					<Label Grid.Column="0" Margin="0 5 0 0" Target="{Binding ElementName=methodBodyTypeComboBox}" Content="_Body Type" />
					<ComboBox Grid.Column="1" Margin="5 5 0 0" HorizontalAlignment="Stretch" Name="methodBodyTypeComboBox" DisplayMemberPath="Name" ItemsSource="{Binding MethodBodyTypeVM.Items}" SelectedIndex="{Binding MethodBodyTypeVM.SelectedIndex}" VerticalContentAlignment="Center" />
					<Label Grid.Column="2" Margin="5 5 0 0" Target="{Binding ElementName=codeTypeComboBox}" Content="Cod_e Type" />
					<ComboBox Grid.Column="3" Margin="5 5 0 0" Name="codeTypeComboBox" HorizontalAlignment="Stretch" DisplayMemberPath="Name" ItemsSource="{Binding CodeTypeVM.Items}" SelectedIndex="{Binding CodeTypeVM.SelectedIndex}" VerticalContentAlignment="Center" />
				</Grid>
				<Grid Grid.Row="1" Visibility="{Binding IsNativeBody, Converter={StaticResource BooleanToVisibilityConverter}}">
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="*" />
					</Grid.ColumnDefinitions>
					<Label Grid.Row="0" Grid.Column="0" Margin="0 0 0 0" Target="{Binding ElementName=rvaTextBox}" Content="_RVA" />
					<TextBox Grid.Row="0" Grid.Column="1" Margin="5 0 0 0" Name="rvaTextBox" Text="{Binding NativeMethodBodyVM.RVA.StringValue, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged}" />
				</Grid>
				<Grid Grid.Row="1" Visibility="{Binding IsCilBody, Converter={StaticResource BooleanToVisibilityConverter}}">
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>
					<Grid Grid.Row="0">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<CheckBox Grid.Column="0" Margin="5 0 0 0" IsChecked="{Binding CilBodyVM.KeepOldMaxStack}" Content="_Keep Old MaxStack" ToolTip="Don't recalculate the MaxStack value when saving the file" />
						<CheckBox Grid.Column="1" Margin="5 0 0 0" IsChecked="{Binding CilBodyVM.InitLocals}" Content="_Init Locals" />
						<Label Grid.Column="2" Margin="5 0 0 0" Target="{Binding ElementName=rva2TextBox}" Content="Header _RVA" />
						<TextBox Grid.Column="3" Margin="5 0 0 0" Name="rva2TextBox" IsReadOnly="True" Background="Transparent" Text="{Binding CilBodyVM.HeaderRVA.StringValue, Mode=OneWay, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged}" />
						<Label Grid.Column="4" Margin="5 0 0 0" Target="{Binding ElementName=fileOffsetTextBox}" Content="Header O_ffset" />
						<TextBox Grid.Column="5" Margin="5 0 0 0" Name="fileOffsetTextBox" IsReadOnly="True" Background="Transparent" Text="{Binding CilBodyVM.HeaderFileOffset.StringValue, Mode=OneWay, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged}" />
						<Label Grid.Column="6" Margin="5 0 0 0" Target="{Binding ElementName=maxStackTextBox}" Content="_MaxStack" />
						<TextBox Grid.Column="7" Margin="5 0 0 0" Name="maxStackTextBox" Text="{Binding CilBodyVM.MaxStack.StringValue, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged}" />
						<Label Grid.Column="8" Margin="5 0 0 0" Target="{Binding ElementName=localVarSigTokTextBox}" Content="_LocalVarSigTok" />
						<TextBox Grid.Column="9" Margin="5 0 0 0" Name="localVarSigTokTextBox" Text="{Binding CilBodyVM.LocalVarSigTok.StringValue, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged}" />
					</Grid>
					<!-- Use recycling mode or the virtualizer will free the ListViewItems only a
					few seconds after letting go of the scroll bar. That will result in a few secs
					where the UI doesn't respond. -->
					<ListView
						Grid.Row="1"
						VirtualizingStackPanel.IsVirtualizing="True"
						VirtualizingStackPanel.VirtualizationMode="Recycling"
						Name="instructionsListView"
						SelectionMode="Extended"
						ItemsSource="{Binding CilBodyVM.InstructionsListVM}"
						Style="{StaticResource CilListViewStyle}"
						ItemContainerStyle="{StaticResource CilListViewItemStyle}">
						<ListView.Resources>
							<Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" BasedOn="{StaticResource CilGridViewScrollViewerStyle}" TargetType="{x:Type ScrollViewer}" />
						</ListView.Resources>
						<ListView.View>
							<GridView AllowsColumnReorder="True">
								<GridViewColumn Header="Index">
									<GridViewColumn.CellTemplate>
										<DataTemplate>
											<TextBlock Style="{StaticResource CilIndexTextBlockStyle}" Text="{Binding Index}" />
										</DataTemplate>
									</GridViewColumn.CellTemplate>
								</GridViewColumn>
								<GridViewColumn Header="Offset">
									<GridViewColumn.CellTemplate>
										<DataTemplate>
											<TextBlock Style="{StaticResource CilLabelTextBlockStyle}" Text="{Binding Offset, StringFormat={}{0:X4}}" />
										</DataTemplate>
									</GridViewColumn.CellTemplate>
								</GridViewColumn>
								<!-- Add extra spaces so most opcodes fit -->
								<GridViewColumn Header="OpCode        ">
									<GridViewColumn.CellTemplate>
										<DataTemplate>
											<!-- Fix hard coded 6,0,6,0 margin -->
											<ComboBox
												Margin="-6 0"
												Style="{StaticResource CilOpCodeComboBoxStyle}"
												ItemTemplate="{StaticResource OperandDataTemplate}"
												mbody:ComboBoxAttachedProps.SelectionBoxItemTemplate="{StaticResource OperandDataTemplate}"
												ItemsSource="{Binding CodeVM.Items}"
												SelectedIndex="{Binding CodeVM.SelectedIndex}"
												VerticalContentAlignment="Center"/>
										</DataTemplate>
									</GridViewColumn.CellTemplate>
								</GridViewColumn>
								<GridViewColumn Header="Operand" Width="1070">
									<GridViewColumn.CellTemplate>
										<DataTemplate>
											<mbody:InstructionOperandControl
												InstructionOperandVM="{Binding InstructionOperandVM}"
												ButtonStyle="{StaticResource CilButtonStyle}"
												ButtonCommand="{Binding InstructionOperandVM.EditOtherCommand}"
												ComboBoxStyle="{StaticResource CilOperandComboBoxStyle}"
												ComboBoxItemTemplate="{StaticResource OperandDataTemplate}"
												ComboBoxSelectionBoxItemTemplate="{StaticResource OperandDataTemplate}"
												mbody:ComboBoxAttachedProps.SelectionBoxItemTemplate="{StaticResource OperandDataTemplate}">
												<mbody:InstructionOperandControl.TextBoxStyle>
													<MultiBinding Converter="{StaticResource InstructionOperandTextBoxStyleConverter}">
														<MultiBinding.Bindings>
															<Binding RelativeSource="{RelativeSource Self}"/>
															<Binding Path="InstructionOperandVM.StringIsSelected"/>
														</MultiBinding.Bindings>
													</MultiBinding>
												</mbody:InstructionOperandControl.TextBoxStyle>
											</mbody:InstructionOperandControl>
										</DataTemplate>
									</GridViewColumn.CellTemplate>
								</GridViewColumn>
							</GridView>
						</ListView.View>
					</ListView>
				</Grid>
			</Grid>
		</TabItem>
		<TabItem Header="Locals" IsEnabled="{Binding IsCilBody}">
			<ListView
				Name="localsListView"
				SelectionMode="Extended"
				ItemsSource="{Binding CilBodyVM.LocalsListVM}"
				Style="{StaticResource CilListViewStyle}"
				ItemContainerStyle="{StaticResource CilListViewItemStyle}">
				<ListView.Resources>
					<Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" BasedOn="{StaticResource CilGridViewScrollViewerStyle}" TargetType="{x:Type ScrollViewer}" />
				</ListView.Resources>
				<ListView.View>
					<GridView AllowsColumnReorder="True">
						<GridViewColumn Header="Index">
							<GridViewColumn.CellTemplate>
								<DataTemplate>
									<TextBlock Style="{StaticResource CilIndexTextBlockStyle}" Text="{Binding Index}" />
								</DataTemplate>
							</GridViewColumn.CellTemplate>
						</GridViewColumn>
						<GridViewColumn Header="P">
							<GridViewColumn.CellTemplate>
								<DataTemplate>
									<CheckBox Style="{StaticResource CilCheckBoxStyle}" IsChecked="{Binding IsPinned}" HorizontalAlignment="Left" ToolTip="Pinned" />
								</DataTemplate>
							</GridViewColumn.CellTemplate>
						</GridViewColumn>
						<GridViewColumn Header="C">
							<GridViewColumn.CellTemplate>
								<DataTemplate>
									<CheckBox Style="{StaticResource CilCheckBoxStyle}" IsChecked="{Binding IsCompilerGenerated}" HorizontalAlignment="Left" ToolTip="Compiler generated" />
								</DataTemplate>
							</GridViewColumn.CellTemplate>
						</GridViewColumn>
						<GridViewColumn Header="Name" Width="200">
							<GridViewColumn.CellTemplate>
								<DataTemplate>
									<!-- Fix hard coded 6,0,6,0 margin -->
									<TextBox Margin="-6 0" Style="{StaticResource CilLocalTextBoxStyle}" Text="{Binding Name, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, UpdateSourceTrigger=LostFocus}" />
								</DataTemplate>
							</GridViewColumn.CellTemplate>
						</GridViewColumn>
						<GridViewColumn Header="Type" Width="950">
							<GridViewColumn.CellTemplate>
								<DataTemplate>
									<mbody:FastClickButton Style="{StaticResource CilButtonStyle}" Content="{Binding Type, Mode=OneWay, Converter={StaticResource CilObjectConverter}}" Command="{Binding EditTypeCommand}" ClickMode="Press" />
								</DataTemplate>
							</GridViewColumn.CellTemplate>
						</GridViewColumn>
					</GridView>
				</ListView.View>
			</ListView>
		</TabItem>
		<TabItem Header="Exception Handlers" IsEnabled="{Binding IsCilBody}">
			<ListView
				Name="ehListView"
				SelectionMode="Extended"
				ItemsSource="{Binding CilBodyVM.ExceptionHandlersListVM}"
				Style="{StaticResource CilListViewStyle}"
				ItemContainerStyle="{StaticResource CilListViewItemStyle}">
				<ListView.Resources>
					<Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" BasedOn="{StaticResource CilGridViewScrollViewerStyle}" TargetType="{x:Type ScrollViewer}" />
				</ListView.Resources>
				<ListView.View>
					<GridView AllowsColumnReorder="True">
						<GridViewColumn Header="Index">
							<GridViewColumn.CellTemplate>
								<DataTemplate>
									<TextBlock Style="{StaticResource CilIndexTextBlockStyle}" Text="{Binding Index}" />
								</DataTemplate>
							</GridViewColumn.CellTemplate>
						</GridViewColumn>
						<GridViewColumn Header="TryStart">
							<GridViewColumn.CellTemplate>
								<DataTemplate>
									<ComboBox
										Style="{StaticResource CilEHComboBoxStyle}"
										ItemTemplate="{StaticResource EHDataTemplate}"
										mbody:ComboBoxAttachedProps.SelectionBoxItemTemplate="{StaticResource SelectionBoxEHDataTemplate}"
										ItemsSource="{Binding TryStartVM.Items}"
										SelectedIndex="{Binding TryStartVM.SelectedIndex, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged}"
										VerticalContentAlignment="Center"/>
								</DataTemplate>
							</GridViewColumn.CellTemplate>
						</GridViewColumn>
						<GridViewColumn Header="TryEnd">
							<GridViewColumn.CellTemplate>
								<DataTemplate>
									<ComboBox
										Style="{StaticResource CilEHComboBoxStyle}"
										ItemTemplate="{StaticResource EHDataTemplate}"
										mbody:ComboBoxAttachedProps.SelectionBoxItemTemplate="{StaticResource SelectionBoxEHDataTemplate}"
										ItemsSource="{Binding TryEndVM.Items}"
										SelectedIndex="{Binding TryEndVM.SelectedIndex, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged}"
										VerticalContentAlignment="Center"/>
								</DataTemplate>
							</GridViewColumn.CellTemplate>
						</GridViewColumn>
						<GridViewColumn Header="FilterStart">
							<GridViewColumn.CellTemplate>
								<DataTemplate>
									<ComboBox
										Style="{StaticResource CilEHComboBoxStyle}"
										ItemTemplate="{StaticResource EHDataTemplate}"
										mbody:ComboBoxAttachedProps.SelectionBoxItemTemplate="{StaticResource SelectionBoxEHDataTemplate}"
										ItemsSource="{Binding FilterStartVM.Items}"
										SelectedIndex="{Binding FilterStartVM.SelectedIndex, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged}"
										VerticalContentAlignment="Center"/>
								</DataTemplate>
							</GridViewColumn.CellTemplate>
						</GridViewColumn>
						<GridViewColumn Header="HandlerStart">
							<GridViewColumn.CellTemplate>
								<DataTemplate>
									<ComboBox
										Style="{StaticResource CilEHComboBoxStyle}"
										ItemTemplate="{StaticResource EHDataTemplate}"
										mbody:ComboBoxAttachedProps.SelectionBoxItemTemplate="{StaticResource SelectionBoxEHDataTemplate}"
										ItemsSource="{Binding HandlerStartVM.Items}"
										SelectedIndex="{Binding HandlerStartVM.SelectedIndex, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged}"
										VerticalContentAlignment="Center"/>
								</DataTemplate>
							</GridViewColumn.CellTemplate>
						</GridViewColumn>
						<GridViewColumn Header="HandlerEnd">
							<GridViewColumn.CellTemplate>
								<DataTemplate>
									<ComboBox
										Style="{StaticResource CilEHComboBoxStyle}"
										ItemTemplate="{StaticResource EHDataTemplate}"
										mbody:ComboBoxAttachedProps.SelectionBoxItemTemplate="{StaticResource SelectionBoxEHDataTemplate}"
										ItemsSource="{Binding HandlerEndVM.Items}"
										SelectedIndex="{Binding HandlerEndVM.SelectedIndex, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged}"
										VerticalContentAlignment="Center"/>
								</DataTemplate>
							</GridViewColumn.CellTemplate>
						</GridViewColumn>
						<GridViewColumn Header="Type      ">
							<GridViewColumn.CellTemplate>
								<DataTemplate>
									<!-- Fix hard coded 6,0,6,0 margin -->
									<ComboBox
										Margin="-6 0"
										Style="{StaticResource CilCatchHandlerTypeComboBoxStyle}"
										ItemTemplate="{StaticResource HandlerTypeDataTemplate}"
										mbody:ComboBoxAttachedProps.SelectionBoxItemTemplate="{StaticResource HandlerTypeDataTemplate}"
										ItemsSource="{Binding HandlerTypeVM.Items}"
										SelectedIndex="{Binding HandlerTypeVM.SelectedIndex}"
										VerticalContentAlignment="Center"/>
								</DataTemplate>
							</GridViewColumn.CellTemplate>
						</GridViewColumn>
						<GridViewColumn Header="CatchType" Width="750">
							<GridViewColumn.CellTemplate>
								<DataTemplate>
									<mbody:FastClickButton Style="{StaticResource CilButtonStyle}" Content="{Binding CatchType, Mode=OneWay, Converter={StaticResource CilObjectConverter}}" Command="{Binding EditCatchTypeCommand}" ClickMode="Press" />
								</DataTemplate>
							</GridViewColumn.CellTemplate>
						</GridViewColumn>
					</GridView>
				</ListView.View>
			</ListView>
		</TabItem>
	</TabControl>
</UserControl>