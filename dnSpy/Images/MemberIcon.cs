// Copyright (c) 2011 AlphaSierraPapa for the SharpDevelop Team
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy of this
// software and associated documentation files (the "Software"), to deal in the Software
// without restriction, including without limitation the rights to use, copy, modify, merge,
// publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons
// to whom the Software is furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all copies or
// substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
// PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE
// FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

namespace ICSharpCode.ILSpy {
	public enum MemberIcon {
		EnumValue,
		EnumValuePrivate,
		EnumValueProtected,
		EnumValueInternal,
		EnumValueCompilerControlled,
		EnumValueProtectedInternal,
		Literal,
		LiteralPrivate,
		LiteralProtected,
		LiteralInternal,
		LiteralCompilerControlled,
		LiteralProtectedInternal,
		FieldReadOnly,
		FieldReadOnlyPrivate,
		FieldReadOnlyProtected,
		FieldReadOnlyInternal,
		FieldReadOnlyCompilerControlled,
		FieldReadOnlyProtectedInternal,
		Field,
		FieldPrivate,
		FieldProtected,
		FieldInternal,
		FieldCompilerControlled,
		FieldProtectedInternal,
		Operator,
		OperatorPrivate,
		OperatorProtected,
		OperatorInternal,
		OperatorCompilerControlled,
		OperatorProtectedInternal,
		ExtensionMethod,
		ExtensionMethodPrivate,
		ExtensionMethodProtected,
		ExtensionMethodInternal,
		ExtensionMethodCompilerControlled,
		ExtensionMethodProtectedInternal,
		Constructor,
		ConstructorPrivate,
		ConstructorProtected,
		ConstructorInternal,
		ConstructorCompilerControlled,
		ConstructorProtectedInternal,
		PInvokeMethod,
		PInvokeMethodPrivate,
		PInvokeMethodProtected,
		PInvokeMethodInternal,
		PInvokeMethodCompilerControlled,
		PInvokeMethodProtectedInternal,
		StaticMethod,
		StaticMethodPrivate,
		StaticMethodProtected,
		StaticMethodInternal,
		StaticMethodCompilerControlled,
		StaticMethodProtectedInternal,
		VirtualMethod,
		VirtualMethodPrivate,
		VirtualMethodProtected,
		VirtualMethodInternal,
		VirtualMethodCompilerControlled,
		VirtualMethodProtectedInternal,
		Method,
		MethodPrivate,
		MethodProtected,
		MethodInternal,
		MethodCompilerControlled,
		MethodProtectedInternal,
		StaticProperty,
		StaticPropertyPrivate,
		StaticPropertyProtected,
		StaticPropertyInternal,
		StaticPropertyCompilerControlled,
		StaticPropertyProtectedInternal,
		VirtualProperty,
		VirtualPropertyPrivate,
		VirtualPropertyProtected,
		VirtualPropertyInternal,
		VirtualPropertyCompilerControlled,
		VirtualPropertyProtectedInternal,
		Property,
		PropertyPrivate,
		PropertyProtected,
		PropertyInternal,
		PropertyCompilerControlled,
		PropertyProtectedInternal,
		StaticEvent,
		StaticEventPrivate,
		StaticEventProtected,
		StaticEventInternal,
		StaticEventCompilerControlled,
		StaticEventProtectedInternal,
		VirtualEvent,
		VirtualEventPrivate,
		VirtualEventProtected,
		VirtualEventInternal,
		VirtualEventCompilerControlled,
		VirtualEventProtectedInternal,
		Event,
		EventPrivate,
		EventProtected,
		EventInternal,
		EventCompilerControlled,
		EventProtectedInternal,
	}
}
